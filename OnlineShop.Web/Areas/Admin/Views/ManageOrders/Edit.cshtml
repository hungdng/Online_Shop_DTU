@model OnlineShop.Web.Models.Order_OrderDetailViewModel
@using System.Globalization
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var orderstatuses = (SelectList)ViewBag.OrderStatuses;
}
<style>
    .ui-front {
        z-index: 9999 !important;
        max-width: 45% !important;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="box">
            <div class="box-header">
                <div class="col-md-12">
                    <div class="col-md-2"></div>
                    <div class="col-md-8">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <div class="clearfix"></div>
                                @Html.HiddenFor(model => model.Orders.ID, new { htmlAttributes = new { @class = "form-control", @Value = Model.Orders.ID } })
                                @Html.HiddenFor(model => model.Orders.BillCode, new { htmlAttributes = new { @class = "form-control", @Value = Model.Orders.BillCode } })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.CustomerName, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @if (Model.Orders.CustomerId == null)
                                        {
                                            @Html.EditorFor(model => model.Orders.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.Orders.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        }
                                        @Html.ValidationMessageFor(model => model.Orders.CustomerName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @if (Model.Orders.CustomerId != null)
                                {
                                    @Html.HiddenFor(model => model.Orders.CustomerId, new { htmlAttributes = new { @class = "form-control" } })
                                }


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.CustomerMobile, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.EditorFor(model => model.Orders.CustomerMobile, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Orders.CustomerMobile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.CustomerEmail, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.EditorFor(model => model.Orders.CustomerEmail, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Orders.CustomerEmail, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.CustomerAddress, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.TextAreaFor(model => model.Orders.CustomerAddress, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Orders.CustomerAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.OrderStatusID, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.DropDownListFor(model => model.Orders.OrderStatusID, new SelectList(orderstatuses, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Orders.OrderStatusID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.Discount, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.EditorFor(model => model.Orders.Discount, new { htmlAttributes = new { @class = "form-control", @value = Model.Orders.Discount.ToString("N0") } })
                                        @Html.ValidationMessageFor(model => model.Orders.Discount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.Amount, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.EditorFor(model => model.Orders.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "amount-Order", @value = Model.Orders.Amount.ToString("N0") } })
                                        @Html.ValidationMessageFor(model => model.Orders.Amount, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.TotalCost, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.EditorFor(model => model.Orders.TotalCost, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "totalCost-Order", @value = Model.Orders.TotalCost.ToString("N0") } })
                                        @Html.ValidationMessageFor(model => model.Orders.TotalCost, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.PaymentMethod, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.DropDownListFor(model => model.Orders.PaymentMethod, new List<SelectListItem>
                                    {
                                    new SelectListItem {Text = "Pay By Cash", Value = "Pay By Cash"},
                                    new SelectListItem {Text = "Pay By Bank Card", Value = "Pay By Bank Card"}
                                    }, "--- Select ---", new { @class = "form-control", @value = Model.Orders.PaymentMethod })
                                        @Html.ValidationMessageFor(model => model.Orders.PaymentMethod, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Orders.Note, htmlAttributes: new { @class = "control-label col-4" })
                                    <div class="col-10">
                                        @Html.TextAreaFor(model => model.Orders.Note, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Orders.Note, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @Html.HiddenFor(model => model.Orders.CreatedDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.Orders.CreatedDate.Value, @type = "datetime" } })
                                @Html.HiddenFor(model => model.Orders.CreatedBy, new { htmlAttributes = new { @class = "form-control", @Value = Model.Orders.CreatedBy } })

                                <div class="form-group">
                                    <div class="col-10">
                                        <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
                                        @Html.ActionLink("Cancel", "Index", new { controller = "ManageOrders" }, new { @class = "btn btn-default custom" })
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div><!-- /.box-body -->
        </div><!-- /.box -->
    </div><!-- /.col -->
</div><!-- /.row -->
<!--table detail orders-->
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                List products in Order
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="col-xs-12 form-group">
                    <div class="col-md-12">
                        <div class="col-md-8"></div>
                        <div class="col-md-4">
                            <button data-toggle="modal" data-target="#modalAdd" class="btn btn-success pull-right btnAddNew"><i class="fa fa-plus"></i>Add New</button>
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 form-group">
                    <div class="table-responsive">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="tblData">
                                <thead>
                                    <tr>
                                        <th>Product Name</th>
                                        <th>Sale Number</th>
                                        <th>Sale Price</th>
                                        <th>Cost</th>
                                        <th style="width:15%">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="order-detail">
                                    @foreach (var orderdetail in Model.OrderDetails.Items)
                                    {
                                        <tr>
                                            <td>@orderdetail.Product.ProductName</td>
                                            <td>@orderdetail.SaleNumber.ToString("N0")</td>
                                            <td>@orderdetail.SalePrice.ToString("N0")</td>
                                            <td>@orderdetail.TotalCost.ToString("N0")</td>
                                            <td>
                                                <button data-toggle="modal" data-target="#modalAddUpdate" class="btn btn-sm btn-primary btn-edit" data-id=@orderdetail.OrderDetailID><i class="fa fa-edit"></i></button>
                                                <button class="btn btn-sm btn-danger btn-delate" data-id=@orderdetail.OrderDetailID><i class="fa fa-trash-o"></i></button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            @if (Model.OrderDetails.TotalPages > 1)
                            {
                                // Create numeric links
                                var startpage = Math.Max(1, Model.OrderDetails.Page - Model.OrderDetails.MaxPage / 2);
                                var endpage = Math.Min(Model.OrderDetails.TotalPages, Model.OrderDetails.Page + Model.OrderDetails.MaxPage / 2);

                                <nav class="text-center">
                                    <ul class="pagination">
                                        @if (Model.OrderDetails.Page > 1)
                                        {
                                            <li>
                                                <a href="?page=1" data-toggle="tooltip" title="Trang đầu" aria-label="First">
                                                    <i class="fa fa-angle-double-left"></i>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="?page=@(Model.OrderDetails.Page-1)" data-toggle="tooltip" title="Trang sau" aria-label="Previous">
                                                    <i class="fa fa-angle-left"></i>
                                                </a>
                                            </li>
                                        }
                                        @for (int i = startpage; i <= endpage; i++)
                                        {
                                            if (Model.OrderDetails.Page == i)
                                            {
                                                <li class="active"><a href="?page=@i" data-toggle="tooltip" title="Trang @i">@i</a></li>
                                            }
                                            else
                                            {
                                                <li><a href="?page=@i" data-toggle="tooltip" title="Trang @i">@i</a></li>
                                            }
                                        }
                                        @if (Model.OrderDetails.Page < Model.OrderDetails.TotalPages)
                                        {
                                            <li>
                                                <a href="?page=@(Model.OrderDetails.Page+1)" data-toggle="tooltip" title="Trang tiếp theo" aria-label="Next">
                                                    <i class="fa fa-angle-right"></i>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="?page=@Model.OrderDetails.TotalPages" data-toggle="tooltip" title="Trang cuối" aria-label="Last">
                                                    <i class="fa fa-angle-double-right"></i>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            }
                        </div>
                    </div>
                    <!-- /.table-responsive -->
                </div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-6 -->
</div>
@RenderPage("_FormUpdateOrderDetails.cshtml")
@RenderPage("_FormAddOrderDetails.cshtml")
@section scripts {
    <script src="~/Assets/Admin/js/manageOrderDetails.js"></script>
}
